@{
    Layout = null;
    int NumberOfHoles = 100;
    int NumberOfPlayers = 2;
    string BackgroundColor = "#2A424E";
    string HighlightColor = "#76ABB7";
    int ColWidthPercent = 100 / (NumberOfPlayers + 1);
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0" />
    <title>Corn Score</title>

    <link href='http://fonts.googleapis.com/css?family=Lato:400,100,100italic,300italic,300,700,700italic,900,900italic,400italic' rel='stylesheet' type='text/css'>

    <style>

        * {
            border:0;
            margin:0;
            padding:0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Lato', Arial, Helvetica, sans-serif;
            background-color: #2A424E;
            background-color: #3C679E;
            color: #FFF;
            float: left;
            width: 100%;
        }

        h1, h2, h3, h4, h5, h6 {
            font-family: 'Lato', Arial, Helvetica, sans-serif;
            text-align: center;
            font-weight: 100;
            width: 100%;
            display: block;
            background-color: rgba(0,0,0,0.5);
        }

        td {
            width: 33%;
            text-align: center;
        }

        .app-header {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            box-shadow: 0 0 3px 3px rgba(0,0,0,0.4);
        }
        .app-header h1 {
            margin: 0;
            padding: 10px;
            font-size: 1.75em;
        }
        .app-header ul {
            margin: 0;
            padding: 0;
            list-style-type: none;
            float: left;
            width: 100%;
        }
        .app-header li {
            margin: 0;
            padding: 0;
            list-style-type: none;
            float: left;
            width: 33%;
            display: block;
        }

        .column-headings {
            background-color: rgba(0,0,0,0.5);
            text-transform: uppercase;
            font-size: .8em;
            font-weight: 300;
        }

        .column-headings li {
            padding: 10px;
            text-align: center;
        }

        .scores {
            background-color: rgba(0,0,0,0.2);
        }

        .scores li {
            padding: 10px;
            text-align: center;
        }

        .score-holder {
            position: absolute;
            top: 138px;
            left: 0;
            right: 0;
            bottom: 0;
            display: block;
            width: 99%;
            overflow-y: scroll; 
        }

        .score-holder table {
            width: 100%;
        }
        .score-holder table td {
            padding: 5px 0;
        }

        .attention {
            background-color: transparent;
            color: #fff;
            padding: 4px 7px;
            margin: 0;
            border-radius: 3px;
            text-transform: uppercase;
            font-size: 0.5em;
            position: relative;
            top: -2px;
            border: 1px solid rgba(255,255,255,0.25);
            outline: none;
            cursor: pointer;
        }

        input.score-for-hole {
            background-color: #3C679E;
            border: 1px solid #76ABB7;
            color: #FFF;
            width: 85%;
            text-align: center;
            height: 40px;
            font-size: 1em;
        }

        input.score-for-hole:focus {
            background-color: rgba(255,255,255,0.5);
            border-color: rgba(255,255,255,0.5);
            color: #000;
            outline: none;
        }
    </style>

</head>
<body>

    <div class="app-header">
        <h1>Cornhole Score Card</h1>

        <ul class="column-headings">
            <li><button class="attention next-inning-button">Add Inning</button></li>
            <li>Blue</li>
            <li>Silver</li>
        </ul>

        <ul class="scores">
            <li>Total</li>
            <li class="calculated-total-score" data-player="player1">8</li>
            <li class="calculated-total-score" data-player="player2">0</li>
        </ul>

    </div>

    <div class="score-holder">
        
        <table>

            <tbody>
                @for (int holeNum = 1; holeNum <= NumberOfHoles; holeNum++)
                {
                    <tr class="inning-row inning-row-@holeNum">
                        <td>
                            #@holeNum
                        </td>
                        @for (int playerNum = 1; playerNum <= NumberOfPlayers; playerNum++)
                        {
                            <td>
                                <input class="score-for-hole player@(playerNum)" type="tel" />
                            </td>
                        }
                    </tr>
                }

                <tr style="display:none">
                    <td>&Sigma;</td>
                    @for (int playerNum = 1; playerNum <= NumberOfPlayers; playerNum++)
                    {
                        <td class="calculated-total-score" data-player="player@(playerNum)">54</td>
                    }
                </tr>
            </tbody>
        </table>
        
    </div>



    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
    <script>
        $(document).ready((function () {

            var currentInning = 0;

            function updateScoreForPlayer(index, elForPlayerTotal) {
                var $elForPlayerTotal = $(elForPlayerTotal),
                    player = $elForPlayerTotal.data("player"),
                    selectorForPlayer = "input." + player,
                    totalForPlayer = 0;

                $(selectorForPlayer).each(function (index, element) {
                    var containedVal = parseInt($(element).val());
                    if (typeof containedVal === "number" && !isNaN(containedVal)) {
                        totalForPlayer += containedVal;
                    }
                });

                $elForPlayerTotal.html(totalForPlayer);
            };

            function updateAllScores() {
                $(".calculated-total-score").each(updateScoreForPlayer);
            };

            function validateChange() {
                var $changedInputEl = $(this),
                    proposedValue = $changedInputEl.val(),
                    parsedValue = parseInt(proposedValue);

                if (typeof parsedValue === "number" && parsedValue > 0 && !isNaN(parsedValue)) {
                    updateAllScores();
                }
                else {
                    $changedInputEl.val("");
                }
            };

            function resetGameBoard() {
                if (confirm("Really erase all scores and start a new game?")) {
                    $("input.score-for-hole").val("");
                    updateAllScores();
                }
            };

            function nextInning() {
              currentInning++;
              $(".inning-row-"+currentInning).prependTo('.score-holder table').show();
              $(".inning-row-"+currentInning).find('input').first().focus();
            }

            return function initAndGo() {
                $(".inning-row").hide();
                $(".score-for-hole").on("blur", validateChange);
                $(".new-game-button").on("click", resetGameBoard);
                $(".next-inning-button").on("click", nextInning);
                nextInning();
                updateAllScores();
            };

        }()))
    </script>

</body>
</html>
